name: Handle Node build actions
description: The action will handle all Node build related actions.
inputs:
  node_version:
    description: NodeJS version
    default: 18.20.3
  static_code_analysis:
    description: Tool to be used for static code analysis like sonar, lint.
    default: lint
  build:
    description: true if build action needs to be performed.
  unit_test:
    description: true if unit test action needs to be performed.
  code_analysis:
    description: true if static code analysis action needs to be performed.
  store_artifact:
    description: true to store the artifacts.

runs:
  using: composite
  steps:
    - name: Setup Node
      if: inputs.node-version != '18.20.3'
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
    - name: Build Node Application
      if: inputs.build == 'true'
      run: |
        npm ci
        npm run build
        ls
      shell: bash
    - name: Execute Unitetests
      if: inputs.unit_test == 'true'
      run: npm run test
      shell: bash
    - name: Perform ESLint
      if: inputs.code_analysis == 'true' && inputs.static_code_analysis == 'lint'
      run: |
        echo "Performing lint operation..."
        npm run lint
      shell: bash
    - name: Perform Sonar Analysis
      if: inputs.code_analysis == 'true' && inputs.static_code_analysis == 'sonar'
      run: echo "Sonar analysis..."
      shell: bash
    - name: print vars
      run: |
        echo "printing...."
        echo "${{github.event.repository.name}}-${GITHUB_REF_NAME////-}-${GITHUB_RUN_NUMBER}"
      shell: bash
    - name: Store artifact
      if: inputs.store_artifact == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: "${{github.event.repository.name}}-${GITHUB_REF_NAME////-}-${GITHUB_RUN_NUMBER}"
        path: dist
    

       